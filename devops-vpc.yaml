## Initially adopted from cloudnaut.io, much modification, addition
---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC: public and private subnets in three availability zones'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'VPC Parameters'
      Parameters:
      - ClassB
Parameters:
  ClassB:
    Description: 'Class B of VPC (10.XXX.0.0/16)'
    Type: Number
    Default: 253
    ConstraintDescription: 'Must be in the range [0-255]'
    MinValue: 0
    MaxValue: 255
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Sub '10.${ClassB}.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: 'DevOps Production'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
      - Key: Name
        Value: 'DevOps Production'
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  SubnetAPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 'us-east-1b'
      CidrBlock: !Sub '10.${ClassB}.1.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Public us-east-1b'
      - Key: Reach
        Value: public
  SubnetAPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 'us-east-1b'
      CidrBlock: !Sub '10.${ClassB}.101.0/24'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Private us-east-1b'
      - Key: Reach
        Value: private
  SubnetBPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 'us-east-1d'
      CidrBlock: !Sub '10.${ClassB}.2.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Public us-east-1d'
      - Key: Reach
        Value: public
  SubnetBPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 'us-east-1d'
      CidrBlock: !Sub '10.${ClassB}.102.0/24'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Private us-east-1d'
      - Key: Reach
        Value: private
  SubnetCPublic:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 'us-east-1e'
      CidrBlock: !Sub '10.${ClassB}.3.0/24'
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Public us-east-1e'
      - Key: Reach
        Value: public
  SubnetCPrivate:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: 'us-east-1e'
      CidrBlock: !Sub '10.${ClassB}.103.0/24'
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Private us-east-1e'
      - Key: Reach
        Value: private
  RouteTableAPublic: # should be RouteTableAPublic, but logical id was not changed for backward compatibility
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Public us-east-1b'
  RouteTableAPrivate: # should be RouteTableAPrivate, but logical id was not changed for backward compatibility
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps prodution Private us-east-1b'
  RouteTableBPublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Public us-east-1d'
  RouteTableBPrivate:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Private us-east-1d'
  RouteTableCPublic:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Public us-east-1e'
  RouteTableCPrivate:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Private us-east-1e'
  RouteTableAssociationAPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetAPublic
      RouteTableId: !Ref RouteTableAPublic
  RouteTableAssociationAPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetAPrivate
      RouteTableId: !Ref RouteTableAPrivate
  RouteTableAssociationBPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetBPublic
      RouteTableId: !Ref RouteTableBPublic
  RouteTableAssociationBPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetBPrivate
      RouteTableId: !Ref RouteTableBPrivate
  RouteTableAssociationCPublic:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetCPublic
      RouteTableId: !Ref RouteTableCPublic
  RouteTableAssociationCPrivate:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref SubnetCPrivate
      RouteTableId: !Ref RouteTableCPrivate
  RouteTablePublicAInternetRoute: # should be RouteTablePublicAInternetRoute, but logical id was not changed for backward compatibility
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTableAPublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  RouteTablePublicBInternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTableBPublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  RouteTablePublicCInternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTableCPublic
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  NetworkAclPublic:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Public Network ACL'
  NetworkAclPrivate:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'DevOps production Private Network ACL'
  SubnetNetworkAclAssociationAPublic:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref SubnetAPublic
      NetworkAclId: !Ref NetworkAclPublic
  SubnetNetworkAclAssociationAPrivate:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref SubnetAPrivate
      NetworkAclId: !Ref NetworkAclPrivate
  SubnetNetworkAclAssociationBPublic:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref SubnetBPublic
      NetworkAclId: !Ref NetworkAclPublic
  SubnetNetworkAclAssociationBPrivate:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref SubnetBPrivate
      NetworkAclId: !Ref NetworkAclPrivate
  SubnetNetworkAclAssociationCPublic:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref SubnetCPublic
      NetworkAclId: !Ref NetworkAclPublic
  SubnetNetworkAclAssociationCPrivate:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref SubnetCPrivate
      NetworkAclId: !Ref NetworkAclPrivate
  NetworkAclEntryInPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
  NetworkAclEntryOutPublicAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPublic
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
  NetworkAclEntryInPrivateAllowVPC:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
  NetworkAclEntryOutPrivateAllowVPC:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAclPrivate
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
  S3Enpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - '*'
            Resource:
              - 'arn:aws:s3:::*'
      ServiceName: !Join 
        - ''
        - - com.amazonaws.
          - !Ref 'AWS::Region'
          - .s3
      VpcId: !Ref VPC
Outputs:
  TemplateID:
    Description: 'DevOps production template id'
    Value: 'DevOps-prod-VPC'
  AZs:
    Description: 'AZs'
    Value: 3
    Export:
      Name: !Sub '${AWS::StackName}-AZs'
  AZA:
    Description: 'AZ of A'
    Value: 'us-east-1b'
    Export:
      Name: !Sub '${AWS::StackName}-AZA'
  AZB:
    Description: 'AZ of B'
    Value: 'us-east-1d'
    Export:
      Name: !Sub '${AWS::StackName}-AZB'
  AZC:
    Description: 'AZ of C'
    Value: 'us-east-1e'
    Export:
      Name: !Sub '${AWS::StackName}-AZC'
  ClassB:
    Description: 'Class B.'
    Value: !Ref ClassB
    Export:
      Name: !Sub '${AWS::StackName}-ClassB'
  VPC:
    Description: 'VPC.'
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
  SubnetsPublic:
    Description: 'Subnets public.'
    Value: !Join [',', [!Ref SubnetAPublic, !Ref SubnetBPublic, !Ref SubnetCPublic]]
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPublic'
  SubnetsPrivate:
    Description: 'Subnets private.'
    Value: !Join [',', [!Ref SubnetAPrivate, !Ref SubnetBPrivate, !Ref SubnetCPrivate]]
    Export:
      Name: !Sub '${AWS::StackName}-SubnetsPrivate'
#  RouteTablePrivate: # deprecated in v4, will be removed in v5
#    Description: 'Route table private (deprecated in v4, will be removed in v5).'
#    Value: !Ref RouteTableAPrivate
#    Export:
#      Name: !Sub '${AWS::StackName}-RouteTablePrivate'
#  RouteTablePublic: # deprecated in v4, will be removed in v5
#    Description: 'Route table public (deprecated in v4, will be removed in v5).'
#    Value: !Ref RouteTableAPublic
#    Export:
#      Name: !Sub '${AWS::StackName}-RouteTablePublic'
  RouteTablesPrivate:
    Description: 'Route tables private.'
    Value: !Join [',', [!Ref RouteTableAPrivate, !Ref RouteTableBPrivate, !Ref RouteTableCPrivate]]
    Export:
      Name: !Sub '${AWS::StackName}-RouteTablesPrivate'
  RouteTablesPublic:
    Description: 'Route tables public.'
    Value: !Join [',', [!Ref RouteTableAPublic, !Ref RouteTableBPublic, !Ref RouteTableCPrivate]]
    Export:
      Name: !Sub '${AWS::StackName}-RouteTablesPublic'
  SubnetAPublic:
    Description: 'Subnet DevOps production Public us-east-1b.'
    Value: !Ref SubnetAPublic
    Export:
      Name: !Sub '${AWS::StackName}-SubnetAPublic'
  RouteTableAPublic:
    Description: 'Route table DevOps production Public us-east-1b.'
    Value: !Ref RouteTableAPublic
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableAPublic'
  SubnetAPrivate:
    Description: 'Subnet DevOps production Private us-east-1b.'
    Value: !Ref SubnetAPrivate
    Export:
      Name: !Sub '${AWS::StackName}-SubnetAPrivate'
  RouteTableAPrivate:
    Description: 'Route table DevOps prodction Private us-east-1b.'
    Value: !Ref RouteTableAPrivate
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableAPrivate'
  SubnetBPublic:
    Description: 'Subnet DevOps production Public us-east-1d.'
    Value: !Ref SubnetBPublic
    Export:
      Name: !Sub '${AWS::StackName}-SubnetBPublic'
  RouteTableBPublic:
    Description: 'Route table DevOps production Public us-east-1d.'
    Value: !Ref RouteTableBPublic
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableBPublic'
  SubnetBPrivate:
    Description: 'Subnet DevOps production Private us-east-1d.'
    Value: !Ref SubnetBPrivate
    Export:
      Name: !Sub '${AWS::StackName}-SubnetBPrivate'
  RouteTableBPrivate:
    Description: 'Route table DevOps production Private us-east-1d.'
    Value: !Ref RouteTableBPrivate
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableBPrivate'
  SubnetCPublic:
    Description: 'Subnet DevOps production Public us-east-1e.'
    Value: !Ref SubnetCPublic
    Export:
      Name: !Sub '${AWS::StackName}-SubnetCPublic'
  RouteTableCPublic:
    Description: 'Route table DevOps production Public us-east-1e.'
    Value: !Ref RouteTableCPublic
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableCPublic'
  SubnetCPrivate:
    Description: 'Subnet DevOps production Private us-east-1e.'
    Value: !Ref SubnetCPrivate
    Export:
      Name: !Sub '${AWS::StackName}-SubnetCPrivate'
  RouteTableCPrivate:
    Description: 'Route table DevOps production Private us-east-1e.'
    Value: !Ref RouteTableCPrivate
    Export:
      Name: !Sub '${AWS::StackName}-RouteTableCPrivate'
